		--------------------------------------------------
					  CodeNarc Groovy Script
		--------------------------------------------------

CodeNarc - Run Using Groovy Script
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  \<\<\<  <<NOTE:>> <A cleaner way to run> <<CodeNarc>> <from the command-line should be available soon.>  \>\>\>

  You can run <<CodeNarc>> using a Groovy script like the one shown in the following example.
  This example is included in the "samples" folder of the <<CodeNarc>> distribution.

+----------------------------------------------------------------------------------------
import org.codenarc.analyzer.DirectorySourceAnalyzer
import org.codenarc.report.HtmlReportWriter
import org.codenarc.ruleset.CompositeRuleSet
import org.codenarc.ruleset.XmlFileRuleSet
import org.codenarc.AnalysisContext
import org.codenarc.ruleset.PropertiesFileRuleSetConfigurer

println 'Run CodeNarc'

final BASE = '../samples/src'
final SOURCE_DIRS = null

def sourceAnalyzer = new DirectorySourceAnalyzer(baseDirectory:BASE, sourceDirectories:SOURCE_DIRS)

def ruleSetFiles = ['rulesets/basic.xml','rulesets/exceptions.xml','rulesets/imports.xml']
def ruleSet = new CompositeRuleSet()
ruleSetFiles.each { ruleSetFile -> ruleSet.add(new XmlFileRuleSet(ruleSetFile)) }
new PropertiesFileRuleSetConfigurer().configure(ruleSet)

def results = sourceAnalyzer.analyze(ruleSet)
def analysisContext = new AnalysisContext(ruleSet:ruleSet, sourceDirectories:SOURCE_DIRS)

def reportWriter = new HtmlReportWriter(outputFile:'reports/CodeNarcReport.html', title:'Sample Code')
reportWriter.writeOutReport(analysisContext, results)
+----------------------------------------------------------------------------------------

  Things to note:

    * Three <RuleSet> files are specified (<basic>, <exceptions> and <imports>).

    * All *.groovy files under "../samples/src" directory will be analyzed. The <sourceDirectories>
      is set to <<<null>>> in this example, but could optionally be set to a <List> of directories,
      relative to the base directory.

    * See the javadoc for the <<<DirectorySourceAnalyzer>>> class for more options for filtering
      source files to be analyzed.

    * Remember that you need the <<log4j>> jar (and a "log4j.properties" file) on the classpath.


  Here is an example BAT file for running the above script on Windows.

+----------------------------------------------------------------------------------------
groovy -classpath lib;lib/CodeNarc-0.1.jar;lib/log4j-1.2.14.jar RunCodeNarc
+----------------------------------------------------------------------------------------

  With GROOVY 1.5.7, the <<-classpath>> parameter did not work properly, so this is an alternative:

+----------------------------------------------------------------------------------------
@setlocal
set CLASSPATH=.;log4j-1.2.14.jar;CodeNarc-0.1.jar
groovy  RunCodeNarc
@endlocal
+----------------------------------------------------------------------------------------

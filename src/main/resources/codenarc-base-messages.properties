# Resource Bundle for HtmlReportWriter messages

# BASIC
BooleanInstantiation.description=Use <em>Boolean.valueOf()</em> or the <em>Boolean.TRUE</em> and <em>Boolean.FALSE</em> constants instead of calling the <em>Boolean()</em> constructor directly.
ReturnFromFinallyBlock.description=Returning from a <em>finally</em> block is confusing and can hide the original exception.
StringInstantiation.description=Use a String literal (e.g., "...") instead of calling the corresponding String constructor (new String("..")) directly.
ThrowExceptionFromFinallyBlock.description=Throwing an exception from a <em>finally</em> block is confusing and can hide the original exception.
EmptyCatchBlock.description=In most cases, exceptions should not be caught and ignored (swallowed).
EmptyTryBlock.description=Empty <em>try</em> blocks are confusing and serve no purpose.
EmptyFinallyBlock.description=Empty <em>finally</em> blocks are confusing and serve no purpose.
EmptyIfStatement.description=Empty <em>if</em> statements are confusing and serve no purpose.
EmptyElseBlock.description=Empty <em>else</em> blocks are confusing and serve no purpose.
EmptyForStatement.description=Empty <em>for</em> statements are confusing and serve no purpose.
EmptyWhileStatement.description=Empty <em>while</em> statements are confusing and serve no purpose.

# BRACES
IfStatementBraces.description=Use braces for <em>if</em> statements, even for a single statement.
WhileStatementBraces.description=Use braces for <em>while</em> statements, even for a single statement.
ElseBlockBraces.description=Use braces for <em>else</em> blocks, even for a single statement. By default, braces are not required for an <em>else</em> if it is followed immediately by an <em>if</em>. Set the <em>bracesRequiredForElseIf</em> property to true to require braces is that situation as well. 

# EXCEPTIONS
CatchThrowable.description=Catching <em>Throwable</em> is dangerous; it can catch exceptions such as <em>ThreadDeath</em> and <em>OutOfMemoryError</em>.

# GENERIC
IllegalRegex.description=Checks for a specified illegal regular expression within the source code. The <em>regex</em> property specifies the regular expression to check for. It is required and cannot be null or empty.
RequiredRegex.description=Checks for a specified regular expression that must exist within the source code. The <em>regex</em> property specifies the regular expression to check for. It is required and cannot be null or empty.

# IMPORTS
DuplicateImport.description=Duplicate import statements are unnecessary.
ImportFromSamePackage.description=An import of a class that is within the same package is unnecessary.
UnnecessaryGroovyImport.description=A Groovy file does not need to include an import for classes from <em>java.lang</em>, <em>java.util</em>, <em>java.io</em>, <em>java.net</em>, <em>groovy.lang</em> and <em>groovy.util</em>, as well as the classes <em>java.math.BigDecimal</em> and <em>java.math.BigInteger</em>.
UnusedImport.description=Imports for a class that is never referenced within the source file is unnecessary.
